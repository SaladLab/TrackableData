// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Akka.Interfaced CodeGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Reflection;
using TrackableData;

#region TrackableData.Tests.Data.Employee

namespace TrackableData.Tests.Data
{
    public class TrackableEmployee : Employee, ITrackable
    {
        public bool Changed { get { return Tracker != null && Tracker.HasChange; } }

        public TrackablePocoTracker<Employee> Tracker { get; set; }

        ITracker ITrackable.Tracker
        {
            get
            {
                return Tracker;
            }
            set
            {
                var t = (TrackablePocoTracker<Employee>)value;
                Tracker = t;
            }
        }

        public IEnumerable<ITrackable> ChildrenTrackables
        {
            get
            {
                yield break;
            }
        }


        private static readonly PropertyInfo NameProperty = typeof(TrackableEmployee).GetProperty("Name");
        public override System.String Name
        {
            get
            {
                return base.Name;
            }
            set
            {
                if (Tracker != null && Name != value)
                    Tracker.TrackSet(NameProperty, base.Name, value);
                base.Name = value;
            }
        }
    }
}

#endregion
